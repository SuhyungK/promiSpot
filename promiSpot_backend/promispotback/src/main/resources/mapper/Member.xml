<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.promispotback.member.model.mapper.MemberMapper">

	<!-- 로그인 -->
	<select id="loginMember" parameterType="MemberEntity" resultType="MemberEntity">
		select * 
		from members 
		where member_id = #{memberId} and member_pass = #{memberPass}
	</select>
	
	<!-- 회원가입 -->
	<insert id="registMember" parameterType="MemberEntity">
		insert into members(member_id, member_pass, member_name, member_nick, member_phone_num 
		, member_img_path, member_img_origin_name, member_img_server_name, member_address_is_agree, member_email)
		values(#{memberId}, #{memberPass}, #{memberName}, #{memberNick}, #{memberPhoneNum}
		, #{memberImgPath}, #{memberImgOriginName}, #{memberImgServerName}, #{memberAddressIsAgree}, #{memberEmail})
	</insert>
	
	<!-- 회원정보수정 -->
	<update id="modifyMember" parameterType="MemberEntity">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="memberNick != null">member_nick = #{memberNick},</if>
			<if test="memberPass != null">member_pass = #{memberPass},</if>
			<if test="memberPhoneNum != null">member_phone_num = #{memberPhoneNum},</if>
			<if test="memberImgPath != null">member_img_path = #{memberImgPath},</if>
		</trim>
		where member_seq = #{memberSeq} 
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="removeMember" parameterType="int">
		delete from members 
		where member_seq = #{memberSeq} 
	</delete>
	
	<!-- 회원정보조회 -->
	<select id="findMember" parameterType="int" resultType="MemberEntity">
		select * 
		from members 
		where member_seq = #{memberSeq} 
	</select>
	
	<!-- 회원들 조회 -->
	<select id="findMemberList" resultType="MemberEntity">
		select * from members 
	</select>
	
	<!-- 토큰 가져오기 -->
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select member_token
		from members 
		where member_id = #{memberId}
	</select>
	
	<!-- 토큰 저장 -->
	<update id="saveRefreshToken" parameterType="map">
		update members 
		set member_token = #{token}
		where member_id = #{memberId}
	</update>
	
	<!-- 토큰 삭제 -->
	<update id="deleteRefreshToken" parameterType="map">
		update members 
		set member_token = #{token, jdbcType=VARCHAR}
		where member_id = #{memberId}
	</update>

	<!-- 회원 일련번호 조회 -->
	<select id="getMemberSeq" parameterType="String" resultType="int">
		select member_seq
		from members
		where member_id = #{memberId}
	</select>

	<!-- 회원 id 중복체크 -->
	<select id="checkId" parameterType="string" resultType="int">
		select count(member_id)
		from members
		where member_id = #{memberId}
	</select>


</mapper>