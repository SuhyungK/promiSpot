<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.promispotback.vote.model.mapper.VoteMapper">

	<!-- 약속 장소 후보 등록 -->
	<insert id="insertCandidatePlace" parameterType="voteEntity" useGeneratedKeys="true" keyProperty="voteSeq">
		insert into votes (promise_seq, place_id, member_seq, vote_cnt)
		values(#{promiseSeq}, #{placeId}, #{memberSeq}, 0)
	</insert>
	
	
	<!-- 약속 장소 후보 가져오기 -->
	<select id="getCandidatePlace" parameterType="int" resultType="voteEntity">
		select v.vote_seq, v.promise_seq, v.place_id, v.member_seq, vote_cnt
		from votes v
		where v.vote_seq = #{voteSeq}
	</select>

	<!-- 약속 장소 후보들 가져오기 - 하나의 약속에 속한 모든 장소 후보들 -->
<!--	<select id="getCandidatePlaceList" parameterType="int" resultType="VotePlaceTwoEntity">-->
<!--		select v.vote_seq, v.promise_seq, v.place_id, v.member_seq, vote_cnt, place_x, place_y-->
<!--		from votes v join places p-->
<!--		on v.place_id = p.place_id-->
<!--		where v.promise_seq = #{promiseSeq}-->
<!--		order by v.vote_seq-->
<!--	</select>-->
	
	<!-- 약속 장소 후보 수정(투표/투표취소) -->
	<update id="modifyCandidatePlace" parameterType="voteEntity">
		update votes
		set vote_cnt = vote_cnt + #{voteCnt}
		where vote_seq = #{voteSeq}
	</update>
	
	
	<!-- 약속 장소 후보 삭제 -->
	<delete id="removeCandidatePlace" parameterType="int">
		delete from votes
		where vote_seq = #{voteSeq}
	</delete>
	
	
	
	<!-- 사용자가 한 약속에서 이 장소를 투표한 건지 아닌지 조회 
	//resultType가 boolean인지 int인지 모르겠다
	//exists문은 결과값이 있으면 1을 리턴, 없으면 0을 리턴.
	-->
	<select id="isVoted" parameterType="map" resultType="int">
		select
		exists
		(select 1
		from voters_members vm
		where vm.member_seq = #{memberSeq} and vm.vote_seq = #{voteSeq})
	</select>
	
	<!-- 약속 장소 투표버튼 누르면 투표자 테이블에 추가 -->
	<insert id="insertVoter" parameterType="voteMemberEntity">
		insert into voters_members (vote_seq, member_seq)
		values(#{voteSeq}, #{memberSeq})
	</insert>
	
	<!-- 약속 장소 투표를 해제하면 투표자 테이블에서 삭제 -->
	<delete id="removeVoter" parameterType="map">
		delete from voters_members
		where member_seq = #{memberSeq} and vote_seq = #{voteSeq}
	</delete>

	<!-- 약속 장소 후보들 가져오기 - 하나의 약속에 속한 모든 장소 후보들  -->
	<select id="getVotePlaceList" parameterType="Integer" resultType="VotePlaceEntity">
		select v.vote_seq, v.promise_seq, v.member_seq, v.vote_cnt,
			   p.place_id, p.place_name, p.place_category_name, p.place_category_group_code, p.place_category_group_name,
			   p.place_phone, p.place_road_address_name, p.place_address_name, p.place_x, p.place_y, p.place_url, p.place_img_url
		from votes v
		join places p
		on v.place_id = p.place_id
		where v.promise_seq = #{promsiseSeq}
	</select>

	<!-- 이 장소가 등록되어 있는지 판단 -->
	<select id="getVotePlaceByPlaceId" parameterType="String" resultType="VoteEntity">
		select *
		from votes
		where place_id = #{placeId}
	</select>

	<!-- 이 장소가 등록되어 있는지 확인  -->
	<select id="checkVotePlace" resultType="VoteEntity">
		select *
		from votes
		where promise_seq = #{promiseSeq}
		and place_id = #{placeId}
	</select>

	<!-- 투표를 하면 +1 해주는 함수  -->
	<update id="doVote" parameterType="VoteMemberEntity">
		update votes
		SET vote_cnt = vote_cnt + 1
		WHERE vote_seq = #{voteSeq};
	</update>


	<update id="cancleVote" parameterType="VoteMemberEntity">
		update votes
		SET vote_cnt = vote_cnt - 1
		WHERE vote_seq = #{voteSeq};
	</update>

	<select id="getVoterList" parameterType="int" resultType="VoteMemberEntity">
		select *
		from voters_members
		where vote_seq = #{voteSeq}
	</select>

	<select id="checkVoteMember" parameterType="VoteMemberEntity" resultType="VoteMemberEntity">
		select *
		from voters_members
		where vote_seq = #{voteSeq}
		and member_seq = #{memberSeq}
	</select>



</mapper>